---
import Layout from "../../../layouts/Layout.astro";
import NavBarAdmin from "../../../components/NavBarAdmin.astro";
import DeleteStudent from "../../../components/DeleteStudent.svelte";
import { GET, DELETE, ADMIN_STUDENT } from "../../../API/API.json";
import type { Student } from "../../../types/api";

// Variables para manejar datos de estudiantes
let RegisterS: Student | undefined;
let creation_error: string | undefined;

// Checa si existe la sesión
const token = Astro.cookies.get("token");
const request = Astro.request;

if (token) {
    if (request.method === "POST") {
        try {
            const formData = await Astro.request.formData();
            const register = formData.get("register")?.toString();
            
            if (register) {
                await DELETE({ register: parseInt(register) }, ADMIN_STUDENT, token.value);
            }
        } catch (e) {
            creation_error = "No se pudo crear el estudiante";
        }
    } else {
        try {
            // Si la sesión es válida
            RegisterS = (await GET(ADMIN_STUDENT, token.value)) as Student;
        } catch (e) {
            // Si no, regresa al login
            console.log(e);
            return Astro.redirect("/");
        }
    }
} else {
    return Astro.redirect("/");
}
---

<Layout title="Modificar Estudiante">
    <DeleteStudent />
    {creation_error && <p style="color: red;">{creation_error}</p>}
</Layout>

<style>
    section {
        background-color: #32253f;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0.2rem 0.2rem 1rem #0005;
        color: var(--accent-2);
    }
    h2 {
        color: var(--primary);
    }
    h3 {
        color: var(--secondary);
    }
    p {
        color: var(--accent-1);
    }
</style>

<Layout title="eliminar libro">
    <NavBarAdmin />
    <DeleteStudent/>
</Layout>

